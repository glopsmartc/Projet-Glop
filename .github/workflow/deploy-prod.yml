name: CI/CD Pipeline Prod

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install frontend dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Run frontend tests
      #- name: Run Frontend Tests
      #  working-directory: ./frontend/projetglop-frontend
      #  run: |
      #    npm install
      #    npm run cypress:run

      - name: Test Frontend Setup # for testing the cicd
        working-directory: ./frontend/projetglop-frontend
        run: |
            echo "Testing Frontend: Initializing project"
            npm init -y
            echo "Frontend setup test succeeded"

      # Set up JDK for backend tests
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'

      # Run JUnit tests for backend
      #- name: Run Backend JUnit Tests
      #  working-directory: ./backend/projetglop-backend
      #  run: |
      #    mvn install
      #    mvn test

      - name: Test Backend Setup # for testing the cicd
        working-directory: ./backend/projetglop-backend
        run: |
            echo "Testing Backend: Verifying Maven installation"
            mvn -version
            echo "Backend setup test succeeded"

  sonarQube:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Step 3: Install SonarQube Scanner
      #- name: Install SonarQube Scanner
      # run: |
      #    curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      #    unzip sonar-scanner-cli.zip
      #    mv sonar-scanner-4.7.0.2747-linux sonar-scanner
      #    export PATH="$PATH:$(pwd)/sonar-scanner/bin"

      - name: Test SonarQube Setup # for testing the cicd
        run: |
            echo "Testing SonarQube installation..."
            echo "Skipping actual installation and analysis for testing"
            echo "SonarQube setup test succeeded"

      # Step 4: Run SonarQube Scanner
      #- name: Run SonarQube Scanner
      # run: |
      #    sonar-scanner \
      #      -Dsonar.projectKey=rawanghosn_Projet-Glop \
      #      -Dsonar.organization=teamglop \
      #      -Dsonar.sources=. \
      #      -Dsonar.host.url=https://sonarcloud.io \
      #      -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Skip SonarQube Analysis # for testing the cicd
        run: |
            echo "Skipping actual SonarQube analysis for now"